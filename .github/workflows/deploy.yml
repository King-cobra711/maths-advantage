name: Deploy to AWS

on:
  push:
    branches: [main] # or your default branch

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: maths-advantage-staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          # Cleanup before building
          docker system prune -af --volumes

          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_STAGING_SSH_KEY }}
          script: |
            # Aggressive cleanup first
            docker system prune -af --volumes
            docker image prune -af
            docker container prune -f

            # Stop and remove old container if it exists
            docker rm -f maths-advantage-app || true

            # Remove all stopped containers and unused images
            docker rm $(docker ps -a -q) || true
            docker rmi $(docker images -q) || true

            # Clear Docker build cache
            docker builder prune -af

            # Check available space
            df -h /

            # Get ECR login token and login
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

            # Pull and run new image
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
            docker run -d --name maths-advantage-app -p 3000:3000 \
              ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

            # Final cleanup
            docker image prune -af

            # Verify space and container
            df -h /
            docker ps

      - name: Clean up old images
        run: |
          # More aggressive cleanup
          docker image prune -a --force
          docker builder prune -af
